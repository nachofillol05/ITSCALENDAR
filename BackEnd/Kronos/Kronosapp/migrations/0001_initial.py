# Generated by Django 5.0.4 on 2024-04-23 13:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('actionId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('isEnabled', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityStates',
            fields=[
                ('availabilityStateId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('isEnabled', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('contactInfoId', models.IntegerField(primary_key=True, serialize=False)),
                ('phoneNumber', models.CharField(max_length=255)),
                ('postalCode', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('streetNumber', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('courseId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTypes',
            fields=[
                ('documentTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EventTypes',
            fields=[
                ('eventTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Nationalities',
            fields=[
                ('nationalityId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Years',
            fields=[
                ('yearId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Schools',
            fields=[
                ('schoolId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=10)),
                ('logo', models.ImageField(upload_to='logos/')),
                ('email', models.EmailField(max_length=255)),
                ('phoneNumber', models.CharField(max_length=255)),
                ('contactInfoId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.contactinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('moduleId', models.IntegerField(primary_key=True, serialize=False)),
                ('moduleNumber', models.IntegerField()),
                ('dayId', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], max_length=10)),
                ('endTime', models.TimeField()),
                ('startTime', models.TimeField()),
                ('schoolId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.schools')),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eventId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('eventTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.eventtypes')),
                ('schoolId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.schools')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('subjectId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('studyPlan', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('weeklyHours', models.IntegerField()),
                ('color', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(max_length=255)),
                ('courseId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.courses')),
                ('yearId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.years')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherSubjectSchool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schoolId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.schools')),
                ('subjectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Schedules',
            fields=[
                ('scheduleId', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('actionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.actions')),
                ('moduleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.modules')),
                ('tssId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.teachersubjectschool')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userId', models.IntegerField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('cellphone', models.CharField(max_length=255)),
                ('document', models.CharField(max_length=255)),
                ('hoursToWork', models.IntegerField()),
                ('contactInfoId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.contactinformation')),
                ('documentTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.documenttypes')),
                ('nationalityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.nationalities')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.roles')),
            ],
        ),
        migrations.AddField(
            model_name='teachersubjectschool',
            name='teacherId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.users'),
        ),
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loadDate', models.DateTimeField()),
                ('availabilityStateId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.availabilitystates')),
                ('moduleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.modules')),
                ('teacherId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.users')),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='yearId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.years'),
        ),
        migrations.CreateModel(
            name='TeacherEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.events')),
                ('teacherId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Kronosapp.users')),
            ],
            options={
                'unique_together': {('teacherId', 'eventId')},
            },
        ),
    ]
